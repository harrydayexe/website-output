<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Harry Day</title><description>A collection of thoughts had by Harry Day.</description><link>https://harryday.xyz</link><language>en</language><lastBuildDate>Sun, 12 Nov 2023 00:19:45 +0000</lastBuildDate><pubDate>Sun, 12 Nov 2023 00:19:45 +0000</pubDate><ttl>250</ttl><atom:link href="https://harryday.xyz/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://harryday.xyz/posts/hackathon-2023</guid><title>My First Hackathon</title><description>Describing my first hackathon and the project I created.</description><link>https://harryday.xyz/posts/hackathon-2023</link><pubDate>Tue, 24 Oct 2023 19:20:00 +0100</pubDate><content:encoded><![CDATA[<p>Last week I had the opportunity to take part in a global hackathon at the bank where I work. This event took place over two days, and I entered as part of a team of junior talent, made up of interns and grads.</p><p>The brief for the hackathon was rather simple. There were a few categories you could build a project under, or a “BYOI” (bring your own idea) category which was a catch-all for anything else. Building something to improve the bank.</p><h2>The Problem</h2><p>We have an internal tool that maintains authorisation and access rights to practically everything in the bank. Need write access to a particular GitLab group? You need to submit the right request. Need to be able to send external emails? You need to submit the right request. The internal tool has a rather unfriendly (to put it politely) interface and is very confusing for new joiners to understand and use. As a team of relatively new joiners, we understood the pain of this system well and were determined to improve it.</p><h2>The Solution</h2><p>Our team’s plan was simple. We would create an AI chatbot that you could ask a question to, and it would provide the relevant permission code to request. For example, telling the bot “I want to edit and maintain X GitLab repo” would return a response along the lines of “To access this repo, you should request X permission with Y authorisation code”.</p><p>In a production version of this application, this data could be scraped from existing internal documentation pages, however, for the proof of concept that we needed to deliver, we decided to pull out a couple of examples of these requests and provide them directly to the AI.</p><h2>The Design</h2><p>As part of the hackathon, the bank made available an internal AI platform which utilised OpenAI’s tools. We used a stateless system, maintaining a queue of system messages and conversation history in the backend, with this being passed in each API request. This means that no potentially confidential information was stored in OpenAI.</p><p>These API requests were driven from a NodeJS server. This server monitored web sockets for incoming user messages, which would then be formatted into a request to the OpenAI API. Once a response was received, this was passed back to the client through the web socket.</p><p>On the client side, we used React to build a simple chatbot interface that could monitor a web socket for incoming messages, and display them on the screen.</p><h2>Implementation</h2><p>On the first day of the hackathon, we sat down and quickly planned out what each person would be doing. I was allocated to working on the server side NodeJS work. The first day went well, we started programming around 11 am and by about 8 pm I had finished the server. In parallel, the front-end team developed an initial react app up until they called it a day around 9 p.m.</p><p>Coming into day 2, our code freeze was 1 pm. We started full steam ahead at 9 a.m. and realised we still had lots of work ahead of us. Plagued by npm issues on multiple laptops, we eventually got both the client and server working on the same machine at the same time. Once communication was working via the web socket, it was time to merge the code into the main branch and get ready for our presentation.</p><h2>Presentation</h2><p>We had a quick lunch and then headed into the auditorium for the presentations of the projects created by the London-based teams. Our turn was about halfway through and we went for a Dragon’s Den style pitch to spice things up. An explanation of the problem we were trying to solve, a quick demo and a few jokes later and we were headed off the stage to a round of applause. Speaking to some members of the audience, they seemed to like our presentation but there was tough competition from other teams with very useful projects so we weren’t overly confident.</p><h2>The Results</h2><p>In the end, our team was not shortlisted for the finals as the competition was tough. We certainly learned a lot over the 2 days and it was a great experience overall. As a team comprised of only junior talent, I would say that we held our own and could be proud of the work we produced. It is something I would try again.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://harryday.xyz/posts/how-to-get-an-internship</guid><title>How I Landed an Internship as a Software Engineer at a Leading Financial Institution</title><description>An A-Z guide on the application and interview process, to land your first role in tech as an intern.</description><link>https://harryday.xyz/posts/how-to-get-an-internship</link><pubDate>Wed, 23 Aug 2023 19:37:00 +0100</pubDate><content:encoded><![CDATA[<h2>Background</h2><p>Hi, my name is Harry Day and I am currently on a 12-month industrial placement as a software developer at one of the world’s leading financial firms. As part of my role, I am supporting the asset management business area by developing tooling and applications so they can remain at the forefront of the space. This article is meant to serve those interested in applying to summer internships and placement years in Computer Science roles.</p><h2>My Journey</h2><p>I’ll be honest with you for a second. Getting onto these placements is hard. I was told that there were over 10,000 applicants for only 200 roles at the firm I work in. That’s a 50:1 ratio. So how do you do it?</p><p>Between September 2022 and New Year’s Eve 2022, I applied to just under 40 different companies for year-long placement programs. Of these 37 companies, I completed 4 video interviews (prerecorded questions that you have a minute or two to record an answer for), which then narrowed down to 2 interviews (this includes Zoom interviews and in-person interviews) and finally one offer.</p><p>Admittedly I never went to the second interview after receiving the first offer as I didn’t want to work at the second company anyway. Now I didn’t apply to the most placements compared to other people I know, but that doesn’t mean that the process wasn’t still exhausting. Nowadays, every company wants you to copy every section of your CV into a form on their website so that a robot can read it, rather than just allowing you to upload a PDF.</p><p>I didn’t hear back from many companies until later in the year, in fact, both my interviews came within a few weeks around the Christmas period. The actual process for the firm that eventually gave me an offer went as so. I applied via a form on their website. A few days later I completed a video interview, By this point, I had plenty of experience with these but more on that later. A week or so after that video interview, I progressed to the next stage and completed two interviews with people at the firm on Zoom. Finally, the next day I received a telephone call with an offer for a year-long placement. Let's break the process down a bit more</p><h2>The Process</h2><p>The first stage for most companies after applying is usually a pre-recorded video interview. This is where a company uses a third-party SaaS platform to ask you questions and allow you to record a video answer. These questions are normally culture and personality-based. For example “What’s a difficult moment you were particularly proud of how you handled”. Now I suck at these kind of questions. When I did a Bank of America interview, they asked a question I had no obvious answer to, and the video started recording while I still had my head in my hands. I quit the interview at that point and unsurprisingly did not get any further. There’s not much you can do for this kind of interview other than practice and prepare some answers from common questions you find online.</p><p>Some companies will also require you to do a coding challenge online on a platform similar to <a href="https://leetcode.com">LeetCode</a>. For internships and year-long placements, these are normally not too challenging and should be relatively easy if you have some programming experience. You can practice these by doing some LeetCode challenges. I recommend working through the order found on <a href="https://neetcode.io/roadmap">NeetCode</a>.</p><p>After this, your application process will go one of two ways. You will be rejected, or invited to a further interview. These further interviews are usually in person or on Zoom (in-person interviews are sometimes accompanied by team exercises to see how well you can integrate into a team). Interviews for technical jobs such as software developers usually involve a technical interview with someone on a team you may be involved in, and an interview with an HR person to see if you’re a good fit for the company.</p><h2>How to Ace Interviews</h2><p>Technical interviews usually involve one or two questions. The aim of these interviews is not necessarily to see if you can solve the problem most efficiently but to understand how you work through problems. For that reason, they are usually “whiteboard problems” where you talk through the solution with your interview and explain your thinking and reasoning.</p><p>The best way to master these interviews is to explain everything you’re thinking, even if it seems small. If an interviewer likes the avenue of thinking you’re going down they will keep you going down that path and towards the solution. Or they may try and steer you back onto the right track by suggesting other considerations.</p><p>Interviews with HR are normally about culture, company ethos and ethics. There isn’t as much to practice here as it varies from company to company, but do your research on the company you are interviewing at. Most companies will have a page on their website explaining their ethos, principles and ethics. Review these and just see how the interview progresses.</p><h2>The Phone Call</h2><p>If all has gone well, you will most likely receive a phone call in a week or two after your interview with an offer for the internship or placement. For placements and internships at larger firms, FAANG, financial institutes etc., the programs are normally well established and there is no wiggle room on salary. However, the salaries at these firms are normally far above the average for a placement (in the UK the average is around £20,000pa for those outside of London).</p><p>Smaller firms and software companies may have some more wiggle room, especially if you’re the only intern starting there. If you think you are being undervalued, make sure to bring that up calmly and reasonably on the phone. Chances are there may be a small increase available.</p><h2>Final Advice</h2><p>Prepare to be rejected. Most companies will ghost you. Some will send a pre-made email saying you were unsuccessful. If you are rejected after an interview you will normally be told this via a phone call. This is a great time to ask if there was a particular reason why and if there was any feedback from the application process. Finally, apply to as many companies and industries as you can. There aren’t many internships available and there are thousands of applicants every year, Be persistent and keep driving. Some places still have internships available late in the year just before exam season, so don’t give up.</p><p>The best way to stand out and get a placement is to have something interesting on your CV. A personal project, lots of contributions to open source, GitHub and LinkedIn are your best friends. For me, my app <a href="https://songlinkr.harryday.xyz">SongLinkr</a> on the App Store was a great talking point in my interviews and something that was asked about by recruiters. Even if it is not relevant to the company in any way, it shows commitment to a piece of work and the use of a toolchain. Feel free to connect on <a href="https://www.linkedin.com/in/harrydayexe/">LinkedIn</a> (even if you just want to boost your connection count) and check out my <a href="https://github.com/harrydayexe">GitHub</a>. Good Luck and Happy Hunting.</p>]]></content:encoded></item></channel></rss>